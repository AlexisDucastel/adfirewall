==============================================================
     _     ____    __  _                             _  _ 
    / \   |  _ \  / _|(_) _ __  ___ __      __ __ _ | || |
   / _ \  | | | || |_ | || '__|/ _ \\ \ /\ / // _` || || |
  / ___ \ | |_| ||  _|| || |  |  __/ \ V  V /| (_| || || |
 /_/   \_\|____/ |_|  |_||_|   \___|  \_/\_/  \__,_||_||_|

==============================================================
Author: Alexis Ducastel <alexis@ducastel.net>
==============================================================

Default : Defines default action for input/output

	patterns :
		Default <input|output> <accept/drop/reject>

	examples :
		Default input drop
		Default output accept

--------------------------------------------------------------
Pingable : Allow ICMP ping requests

	patterns :
		Pingable always

		Pingable from <ip/network>
			from = ip or network of authorized peer

		Pingable via <interface>
			via = interface authorized to receive ping

	examples :
		Pingable always
		Pingable from 5.6.7.8
		Pingable from 3.4.5.6/24
		Pingable via eth0

--------------------------------------------------------------
Trust : Accept all connection from an ip/network/interface

	patterns :
		Trust peer <ip/network>[,<ip/network>[,...]]
		Trust interface <interface>

	examples :
		Trust peer hostname.domain.tld
		Trust peer 5.6.7.8
		Trust peer 3.4.5.0/24
		Trust peer hostname.domain.tld,5.6.7.8,3.4.5.0/24
		Trust interface eth0

--------------------------------------------------------------
Blacklist : Deny all connection from an ip/network

	patterns :
		Blacklist <ip/network>[,<ip/network>[,...]]

	examples :
		Blacklist host.domain.tld
		Blacklist 5.6.7.8
		Blacklist 3.4.5.0/24
		Blacklist host.domain.tld,55.6.7.8,3.4.5.0/24

--------------------------------------------------------------
Serving : Allow connection for one or many ports

	patterns :
		Serving <portlist> [for <ip/network>] [on <ip>]
			for = ip or network of authorized peer
			on = local listening ip address

		Serving <portlist> [via <interface>]
			via = interface authorized to server portlist

	examples :
		Serving www,ssh
		Serving mysql for 5.6.7.8
		Serving 8080 on 3.4.5.6
		Serving 8080/tcp on 3.4.5.6 for 5.6.7.8
		Serving smtp via eth0

--------------------------------------------------------------
PortKnock : Allow connection after a sequence of tcp connections

	patterns :
		PortKnock open <portlist> during <duration> after <sequence>
			duration = number of seconds while connections are allowed
			sequence = port list in numeric format, ex : 1000 2000 3000

		PortKnock trust me during <duration> after <sequence>
			duration = number of seconds while connections are allowed
			sequence = port list in numeric format, ex : 1000 2000 3000

	examples :
		PortKnock open ssh,www during 3 after 1000 3000 2000
		PortKnock trust me during 600 after 1000 4000 2000 5000

--------------------------------------------------------------
Nat : provide internet access to private network

	patterns :
		Nat 1:1 <ip/network> via <ip>
	       	Nat inside <ip/network> outside <ip>
		Nat forward <ip>:<port> to <ip>:<port>

	examples :
		Nat 1:1 10.1.1.1 via 3.4.5.6
		Nat inside 10.0.0.0/8 outside 5.6.7.8
		Nat forward 5.6.7.8:1022 to 10.0.0.1:22 
--------------------------------------------------------------
SetTestTimeInMinutes : Configure the time in minutes for testing config

	patterns :
		SetTestTimeInMinutes <minutes>

	examples :
		SetTestTimeInMinutes 5
